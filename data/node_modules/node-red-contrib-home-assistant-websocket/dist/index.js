"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const globals_1 = require("./globals");
const exposed_settings_1 = require("./helpers/exposed-settings");
const api_1 = __importDefault(require("./nodes/api"));
const button_1 = __importDefault(require("./nodes/button"));
const call_service_1 = __importDefault(require("./nodes/call-service"));
const config_server_1 = __importDefault(require("./nodes/config-server"));
const current_state_1 = __importDefault(require("./nodes/current-state"));
const device_1 = __importDefault(require("./nodes/device"));
const entity_1 = __importDefault(require("./nodes/entity"));
const entity_config_1 = __importDefault(require("./nodes/entity-config"));
const events_all_1 = __importDefault(require("./nodes/events-all"));
const events_state_1 = __importDefault(require("./nodes/events-state"));
const fire_event_1 = __importDefault(require("./nodes/fire-event"));
const get_entities_1 = __importDefault(require("./nodes/get-entities"));
const get_history_1 = __importDefault(require("./nodes/get-history"));
const poll_state_1 = __importDefault(require("./nodes/poll-state"));
const render_template_1 = __importDefault(require("./nodes/render-template"));
const tag_1 = __importDefault(require("./nodes/tag"));
const time_1 = __importDefault(require("./nodes/time"));
const trigger_state_1 = __importDefault(require("./nodes/trigger-state"));
const wait_until_1 = __importDefault(require("./nodes/wait-until"));
const webhook_1 = __importDefault(require("./nodes/webhook"));
const zone_1 = __importDefault(require("./nodes/zone"));
const routes_1 = require("./routes");
const nodes = {
    'ha-api': api_1.default,
    'ha-button': button_1.default,
    'api-call-service': call_service_1.default,
    server: config_server_1.default,
    'api-current-state': current_state_1.default,
    'ha-device': device_1.default,
    'ha-entity': entity_1.default,
    'ha-entity-config': entity_config_1.default,
    'server-events': events_all_1.default,
    'server-state-changed': events_state_1.default,
    'ha-fire-event': fire_event_1.default,
    'ha-get-entities': get_entities_1.default,
    'api-get-history': get_history_1.default,
    'poll-state': poll_state_1.default,
    'api-render-template': render_template_1.default,
    'trigger-state': trigger_state_1.default,
    'ha-tag': tag_1.default,
    'ha-time': time_1.default,
    'ha-wait-until': wait_until_1.default,
    'ha-webhook': webhook_1.default,
    'ha-zone': zone_1.default,
};
module.exports = (RED) => {
    (0, globals_1.setRED)(RED);
    (0, routes_1.createRoutes)();
    for (const type in nodes) {
        RED.nodes.registerType(type, nodes[type], (0, exposed_settings_1.getExposedSettings)(type));
    }
};
