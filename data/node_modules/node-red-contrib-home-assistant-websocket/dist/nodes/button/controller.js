"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("../../globals");
const utils_1 = require("../../helpers/utils");
const BaseNode_1 = __importDefault(require("../BaseNode"));
const nodeDefaults = {
    config: {
        entityConfig: {
            isNode: true,
        },
        outputProperties: {},
    },
};
class ButtonController extends BaseNode_1.default {
    constructor({ node, config, status, }) {
        var _a, _b;
        super({ node, config, RED: globals_1.RED, status, nodeOptions: nodeDefaults });
        this.onTrigger = (data) => {
            this.status.setSuccess('pressed');
            const message = {};
            this.setCustomOutputs(this.nodeConfig.outputProperties, message, {
                config: this.nodeConfig,
                entity: data.entity,
                entityState: data.entity.state,
                triggerId: data.entity.entity_id,
            });
            this.send(message);
        };
        (0, utils_1.addEventListeners)({ triggered: this.onTrigger }, (_b = (_a = this.nodeConfig) === null || _a === void 0 ? void 0 : _a.entityConfig) === null || _b === void 0 ? void 0 : _b.controller);
    }
    onClose() {
        this.removeEventListeners();
    }
    removeEventListeners() {
        var _a, _b;
        (0, utils_1.removeEventListeners)({ triggered: this.onTrigger }, (_b = (_a = this.nodeConfig) === null || _a === void 0 ? void 0 : _a.entityConfig) === null || _b === void 0 ? void 0 : _b.controller);
    }
}
exports.default = ButtonController;
